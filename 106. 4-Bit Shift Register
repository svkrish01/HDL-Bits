/*
Developer   - Sriram Venkata Krishna
Date        - 21-10-2025
Platform    - HDL Bits
*/

//107. 4-Bit Shift Register

module top_module
    (
        input clk, areset,
        input load, ena,
        input [3:0] data,
        output reg [3:0] q
    ); 
    
    always @(posedge clk or posedge areset) begin
        if(areset) begin
            q[3:0] <= 0;
        end
        
        else if(load) begin
            q[3:0] <= data[3:0];
        end
        
        else if(ena) begin
            q[2:0] <= q[3:1];
            q[3] <= 1'b0;
        end   
    end

endmodule
