/*
Developer   - Sriram Venkata Krishna
Date        - 18-09-2025
Platform    - HDL Bits
*/

//104. 1000 Counter

module top_module 
    (
        input clk,
        input reset,
        output OneHertz,
        output [2:0] c_enable
    );
    
    reg [3:0] out_0, out_1, out_2;

    bcdcount counter0 (clk, reset, c_enable[0], out_0[3:0]);
    bcdcount counter1 (clk, reset, c_enable[1], out_1[3:0]);
    bcdcount counter2 (clk, reset, c_enable[2], out_2[3:0]);
    
    assign c_enable[0] = 1'b1;
    
    always @(posedge clk) begin
        if(out_0 == 8) begin
            c_enable[1] = 1'b1;
        end
        
        else begin
            c_enable[1] = 1'b0;
        end        
        
        if((out_1 == 9) && (out_0 == 8)) begin
            c_enable[2] = 1'b1;
        end
        
        else begin
            c_enable[2] = 1'b0;
        end
        
        if((out_2 == 9) && (out_1 == 9) && (out_0 == 8)) begin
            OneHertz = 1'b1;
        end
        
        else begin
            OneHertz = 1'b0;
        end
    end

endmodule
